(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{57:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#field","aria-hidden":"true"}},[t._v("#")]),t._v(" Field")]),a("p",[t._v("VeeValidate maps HTML elements and Vue components that are under validation to instances of "),a("code",[t._v("fields")]),t._v(", while this class not exposed to be used publicly you can find Its API very useful if you are planning to do some lower-level actions.")]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),a("p",[t._v("Any undocumented properties/methods are not intended for public use.")])]),a("h2",{attrs:{id:"getting-the-field-instance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-the-field-instance","aria-hidden":"true"}},[t._v("#")]),t._v(" Getting the field instance")]),a("p",[t._v("Getting a field instance is straightforward, you can use the "),a("code",[t._v("Validator.fields.find")]),t._v(" method to get the field instance.")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// find the field which has a matching name of 'email'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" field "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$validator"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fields"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("find")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// find the field which has a name of email and is in the 'newsletter' scope.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" field "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$validator"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fields"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("find")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'email'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scope"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'newsletter'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// or use the id to find the field if it is known to you.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" field "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$validator"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fields"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("find")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'fieldId'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api","aria-hidden":"true"}},[t._v("#")]),t._v(" API")]),a("div",{staticClass:"danger custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),a("p",[t._v("Careful when using the field API, as it may disrupt the validator operations and may produce unintended results.")])]),a("h3",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor","aria-hidden":"true"}},[t._v("#")]),t._v(" Constructor")]),a("h3",{attrs:{id:"properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties","aria-hidden":"true"}},[t._v("#")]),t._v(" Properties")]),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),a("th",[t._v("Type")]),a("th",[t._v("Default")]),a("th",[t._v("Description")])])]),a("tbody",[a("tr",[a("td",[t._v("id")]),a("td",[a("code",[t._v("string")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("The id of the field (automatically generated).")])]),a("tr",[a("td",[t._v("el")]),a("td",[a("code",[t._v("HTMLElement")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("The element that is the HTML input or the root element of the component being validated.")])]),a("tr",[a("td",[t._v("updated")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("false")])]),a("td",[t._v("Indicates if the field should be re-scanned to update its properties like validation rules.")])]),a("tr",[a("td",[t._v("watchers")]),a("td",[a("code",[t._v("Watcher[]")])]),a("td",[a("code",[t._v("[]")])]),a("td",[t._v("Array of wrappers for the event listeners being used by the field instance.")])]),a("tr",[a("td",[t._v("events")]),a("td",[a("code",[t._v("string[]")])]),a("td",[a("code",[t._v("[]")])]),a("td",[t._v("List of events that trigger validation.")])]),a("tr",[a("td",[t._v("rules")]),a("td",[a("code",[t._v("{ [string]: Object }")])]),a("td",[a("code",[t._v("{}")])]),a("td",[t._v("A map of rules/params being used to validate the field.")])]),a("tr",[a("td",[t._v("validity")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("false")])]),a("td",[t._v("Whether the "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML Constrained API")]),t._v(" should be used to apply error messages.")])]),a("tr",[a("td",[t._v("aria")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("true")])]),a("td",[t._v("If "),a("code",[t._v("aria-required")]),t._v(" and "),a("code",[t._v("aria-invalid")]),t._v(" attributes should be set/updated after validation.")])]),a("tr",[a("td",[t._v("vm")]),a("td",[a("code",[t._v("Vue instance")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("The context component that is using the directive in its template.")])]),a("tr",[a("td",[t._v("component")]),a("td",[a("code",[t._v("Vue instance")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("The component being validated if it is one.")])]),a("tr",[a("td",[t._v("ctorConfig")]),a("td",[a("code",[t._v("VeeValidateConfig")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("A scoped config for the field.")])]),a("tr",[a("td",[t._v("flags")]),a("td",[a("code",[t._v("{ [string]: boolean }")])]),a("td",[a("code",[t._v("{}")])]),a("td",[t._v("A string/boolean map of the field current flags state.")])]),a("tr",[a("td",[t._v("alias")]),a("td",[a("code",[t._v("string")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("A readonly prop for alternative name to be used by the field.")])]),a("tr",[a("td",[t._v("getter")]),a("td",[a("code",[t._v("() => any")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("A getter function that returns the current field value.")])]),a("tr",[a("td",[t._v("name")]),a("td",[a("code",[t._v("string")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("The field name.")])]),a("tr",[a("td",[t._v("scope")]),a("td",[a("code",[t._v("string")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("The field scope.")])]),a("tr",[a("td",[t._v("targetOf")]),a("td",[a("code",[t._v("string")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("The id of the field targeting this field for validation (confirmed/before/after).")])]),a("tr",[a("td",[t._v("initial")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("false")])]),a("td",[t._v("If this field should be validated upon creation.")])]),a("tr",[a("td",[t._v("classes")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("false")])]),a("td",[t._v("If flags based classes should be applied on the HTML input.")])]),a("tr",[a("td",[t._v("classNames")]),a("td",[a("code",[t._v("Object")])]),a("td",[a("code",[t._v("{}")])]),a("td",[t._v("A map containing flag name / class names to be applied based on flags.")])]),a("tr",[a("td",[t._v("delay")]),a("td",[a("code",[t._v("number")])]),a("td",[a("code",[t._v("0")])]),a("td",[t._v("The amount of delay for this field events triggers.")])]),a("tr",[a("td",[t._v("listen")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("true")])]),a("td",[t._v("If this field should have listeners.")])]),a("tr",[a("td",[t._v("model")]),a("td",[a("code",[t._v("{ expression: string, lazy: boolean }")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("Contains info about the model being bound to this field using "),a("code",[t._v("v-model")]),t._v(".")])]),a("tr",[a("td",[t._v("value")]),a("td",[a("code",[t._v("any")])]),a("td",[a("code",[t._v("() => undefined")])]),a("td",[t._v("A readonly version of the "),a("code",[t._v("getter")]),t._v(" prop.")])]),a("tr",[a("td",[t._v("isRequired")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("true | false")])]),a("td",[t._v("Readonly indicator if the field is required. (has required rule)")])]),a("tr",[a("td",[t._v("isDisabled")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("true | false")])]),a("td",[t._v("Readonly indicator if the field is disabled (skips validation).")])]),a("tr",[a("td",[t._v("validator")]),a("td",[a("code",[t._v("Validator")])]),a("td",[a("code",[t._v("null")])]),a("td",[t._v("Readonly reference to the validator instance that created this field.")])]),a("tr",[a("td",[t._v("rejectsFalse")]),a("td",[a("code",[t._v("boolean")])]),a("td",[a("code",[t._v("false")])]),a("td",[t._v("If "),a("code",[t._v("required")]),t._v(" rule should fail when "),a("code",[t._v("false")]),t._v(" is provided as a value.")])])])]),a("h3",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Methods")]),a("table",[a("thead",[a("tr",[a("th",[t._v("Signature")]),a("th",[t._v("Return Type")]),a("th",[t._v("Description")])])]),a("tbody",[a("tr",[a("td",[t._v("matches(options: FieldMatchOptions)")]),a("td",[a("code",[t._v("boolean")])]),a("td",[t._v("Checks if the field matches the specified matching object criteria.")])]),a("tr",[a("td",[t._v("update(options: FieldOptions)")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Updates the field properties and re-adds the listeners and syncs the classes applied.")])]),a("tr",[a("td",[t._v("reset()")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Resets the field flags to their initial state.")])]),a("tr",[a("td",[t._v("setFlags(flags: { [string]: boolean })")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Updates the field flags and also updates the specified field counterparts eg. valid/invalid.")])]),a("tr",[a("td",[t._v("unwatch(tag?: RegExp)")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Removes the listeners that has a matching tag or removes all if none is provided.")])]),a("tr",[a("td",[t._v("updateClasses()")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Syncs the classes being applied on the element with the flags if enabled.")])]),a("tr",[a("td",[t._v("updateAriaAttrs()")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Syncs the aria attributes applied on the element with the flags if enabled.")])]),a("tr",[a("td",[t._v("updateCustomValidity()")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Syncs the constrained API validation message with the first error message for this field.")])]),a("tr",[a("td",[t._v("destroy()")]),a("td",[a("code",[t._v("void")])]),a("td",[t._v("Removes all listeners and dependencies of the field.")])])])])])}],!1,null,null,null);e.default=n.exports}}]);